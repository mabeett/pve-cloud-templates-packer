### dumps qemu copy on target system
# installs a cloud image on target's disk via qemu-img(1)
#
# This playbook needs to be running in installer livedistro as sysrescuecd
---
- hosts: all
  become: yes
  # gather_facts: no
  tasks:
  - name: "get effective url for {{ cloud_img_url }} - preventing redirect"
    ansible.builtin.command:
      cmd: "curl -I -o/dev/null -Ls -w %{url_effective} {{ cloud_img_url }}"
      ## command + curl is neccessary because url nor curl can get the url without body/content
      warn: false
    register: eff_url

  - name: qemu-img copy "{{ eff_url.stdout }} to {{ vm_disk }}"
    ansible.builtin.command: "qemu-img convert -p -f qcow2 -O raw {{ eff_url.stdout }} {{ vm_disk }}"
    poll: 0
    async: 45000
    register: q_st

  - name: Check status of qemu task
    async_status:
      jid: "{{ q_st.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: "{{ wait_qemu_img | default(1800) }}"

  - name: sync
    ansible.builtin.command: "sync"
    poll: 0
    async: 45000
    register: s_st

  - name: Check status of sync
    async_status:
      jid: "{{ s_st.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: "{{ wait_sync | default(1800) }}"

  - name: gropart for {{ vm_disk }} 1
    ansible.builtin.command: "growpart --fudge 1 {{ vm_disk }} 1"
    poll: 0
    async: 45000
    register: g_st
    when: growpart_after_qemuimg | default(True) | bool

  - name: Check status of growpart task
    async_status:
      jid: "{{ g_st.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: "{{ wait_growpart | default(1800) }}"
    when: growpart_after_qemuimg | default(True) | bool
